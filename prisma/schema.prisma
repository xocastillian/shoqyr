generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  fullName         String
  email            String    @unique
  password         String
  registrationDate DateTime  @default(now())
  addresses        Address[]
  cart             Cart?
  orders           Order[]
  reviews          Review[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  price       Float
  stock       Int
  imageUrl    String?
  cartItems   CartItem[]
  orderItems  OrderItem[]
  sportType   SportType   @relation(fields: [sportTypeId], references: [id], onDelete: Cascade)
  sportTypeId Int
  reviews     Review[]
  categories  Category[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int?       @unique
  user      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  cartItems CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  cartId    Int
  productId Int
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id           Int           @id @default(autoincrement())
  orderDate    DateTime      @default(now())
  status       String
  totalAmount  Float
  userId       Int?
  user         User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItems   OrderItem[]
  shippingInfo ShippingInfo?
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model Address {
  id           Int           @id @default(autoincrement())
  street       String
  city         String
  state        String
  zipCode      String
  userId       Int?
  user         User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  shippingInfo ShippingInfo?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model SportType {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Review {
  id        Int     @id @default(autoincrement())
  rating    Int
  comment   String?
  productId Int
  userId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ShippingInfo {
  id             Int      @id @default(autoincrement())
  trackingNumber String
  shippingDate   DateTime
  deliveryDate   DateTime
  addressId      Int      @unique
  orderId        Int      @unique
  address        Address  @relation(fields: [addressId], references: [id], onDelete: Cascade)
  order          Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}
